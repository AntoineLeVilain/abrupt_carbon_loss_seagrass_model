# working directory
setwd('/Users/antoinelevilain/Desktop/doctorat/my_articles/second/second_article/abrupt_carbon_losses_seagrass_model/figure2') # set your own working directory
# requirements
package_list <- c("ggplot2", "readxl", "gridExtra", "dplyr", "scales", "wesanderson", "ggalt")
for (package in package_list){
library(package, character.only = TRUE)
}
x1 <- (96 + 997)*0.335 #low realistic biomass
x2 <- (1294 + 2003)*0.335 #high realistic biomass
# data prep
data <- read.csv("sh_temp.csv")
# working directory
setwd('/Users/antoinelevilain/Desktop/doctorat/my_articles/second/second_article/abrupt_carbon_losses_seagrass_model/figure2') # set your own working directory
# requirements
package_list <- c("ggplot2", "readxl", "gridExtra", "dplyr", "scales", "wesanderson", "ggalt")
for (package in package_list){
library(package, character.only = TRUE)
}
x1 <- (96 + 997)*0.335 #low realistic biomass
x2 <- (1294 + 2003)*0.335 #high realistic biomass
# data prep
data <- read.csv("sh_temp.csv")
seagrass <- data %>%
filter(stability == 'seagrass' | stability == 'bistable')
realistic1 <- seagrass %>%
filter(S >= x1) %>%
filter(S <= x2)
data2 <- read.csv("sh_ma.csv")
seagrass2 <- data2 %>%
filter(stability == 'seagrass' | stability == 'bistable')
realistic2 <- seagrass2 %>%
filter(S >= x1) %>%
filter(S <= x2)
data3 <- read.csv("sh_pmax.csv")
seagrass3 <- data3 %>%
filter(stability == 'seagrass' | stability == 'bistable')
realistic3 <- seagrass3 %>%
filter(S >= x1) %>%
filter(S <= x2)
# color palette
pal <- wes_palette("Zissou1", 100, type = "continuous")
data_pal <- rbind(seagrass[, 5:9], seagrass2[, 5:9], seagrass3[, 5:9])
common_color_scale <- scale_color_gradientn(colors = pal, limits = c(min(log(data_pal$S)), max(log(data_pal$S))))
# plot1
plot_1 <- ggplot() +
geom_point(data = seagrass, aes(x = temp, y = sh, color = log(S)), size = 1, shape = 15) +
xlab("T") + ylab("Sh") + theme_classic() + theme(legend.position = "none") +
common_color_scale +
geom_encircle(data = realistic1, aes(x = temp, y = sh), s_shape = 1, expand = 0.01, position = "identity", linetype = "dashed", color = "black", size = 3) + # Circle them
xlim(298.85, 308.15)
# plot2
plot_2 <- ggplot() + geom_point(data = seagrass2, aes(x = ma, y = sh, color = log(S)), size = 1, shape = 15) +
xlab("ma") + ylab("Sh") + theme_classic() + theme(legend.position = "none") + xlim(0, 0.006) +
common_color_scale +
geom_encircle(data = realistic2, aes(x = ma, y = sh), s_shape = 1, expand = 0.01, position = "identity", linetype = "dashed", color = "black", size = 3)
# plot3
plot_3 <- ggplot() + geom_point(data = seagrass3, aes(x = pmax, y = sh, color = log(S)), size = 1, shape = 15) +
xlab("Pmax") + ylab("Sh") + theme_classic() + theme(legend.position = "none") + xlim(0.5, 2.5) +
common_color_scale +
geom_encircle(data = realistic3, aes(x = pmax, y = sh), s_shape = 1, expand = 0.01, position = "identity", linetype = "dashed", color = "black", size = 3)
# Save plots
plot <- grid.arrange(plot_2, plot_3, plot_1, ncol = 3)
ggsave("figure2a.png",
plot,
width = 15, height = 3)
# working directory
setwd('/Users/antoinelevilain/Desktop/doctorat/my_articles/second/second_article/abrupt_carbon_losses_seagrass_model/figure2/figure2def') # set your own working directory
# requirements
package_list <- c("ggplot2", "readxl", "gridExtra", "dplyr", "scales")
for (package in package_list){
library(package, character.only = TRUE)
}
# model
model <- function(x){
S <- rmax*((tmax - temp)/(tmax - topt))*((temp/topt)^(topt/(tmax - topt)))*x[5]/(x[5] + nr)*(i0*exp(-a*pmax*z)/(i0*exp(-a*pmax*z) + ir))*x[1] - x[1]*(ms + ma + mh*hmax*sh/(sh + x[1]))
CA <- alpha*h*pmax*(1 - (hmax*sh/(sh + x[1]))/(hmax*sh/(sh + x[1]) + hp)) - x[2]*(phida*1/(exp(-ea/(8.314*td)))*exp(-ea/(8.314*temp)) + (hmax*sh/(sh + x[1]))/(hmax*sh/(sh + x[1]) + hea) + 1/(1+exp(-fb1*(x[2] + x[3] - fb2))))
CS <- beta*x[1]*(ms + mh*hmax*sh/(sh + x[1])) - x[3]*(phids*1/(exp(-ea/(8.314*td)))*exp(-ea/(8.314*temp)) + (hmax*sh/(sh + x[1]))/(hmax*sh/(sh + x[1]) + hes) + 1/(1+exp(-fb1*(x[2] + x[3] - fb2))))
CB <- x[2]*1/(1+exp(-fb1*(x[2] + x[3] - fb2))) + x[3]*1/(1+exp(-fb1*(x[2] + x[3] - fb2))) - (1-ma*da)*x[4]*phidb*1/(exp(-ea/(8.314*td)))*exp(-ea/(8.314*temp)) - ma*da*x[4]*(phida+phids)/2*1/(exp(-ea/(8.314*td)))*exp(-ea/(8.314*temp))
N <- i + gamma*(x[2]*phida*1/(exp(-ea/(8.314*td)))*exp(-ea/(8.314*temp)) + x[3]*phids*1/(exp(-ea/(8.314*td)))*exp(-ea/(8.314*temp)) + (1-ma*da)*x[4]*phidb*1/(exp(-ea/(8.314*td)))*exp(-ea/(8.314*temp)) + ma*da*x[4]*(phida+phids)/2*1/(exp(-ea/(8.314*td)))*exp(-ea/(8.314*temp))) - delta*(rmax*((tmax - temp)/(tmax - topt))*((temp/topt)^(topt/(tmax - topt)))*x[5]/(x[5] + nr)*(i0*exp(-a*pmax*z))/(i0*exp(-a*pmax*z) + ir))*x[1]-l*x[5]
c(S = S, CA = CA, CS = CS, CB = CB, N = N)
}
# parameter values
rmax <- 0.011
ms <- 0.0014
topt <- 298.85
tmax <- 307.05
nr <- 0.015
i0 <- 709
ir <- 296
sh <- 22.7
hp <- 0.023
a <- 0.07
mh <- 0.028
alpha <- 0.194
h <- 0.68
phida <- 0.024
phids <- 0.00024
phidb <- 0.00005
ea <- 58000
r <- 8.314
td <- 303.65
hea <- 12.53
hes <- 12.53
fb1 <- 0.0022
fb2 <- 1335
beta <- 0.292
gamma <- 0.137
delta <- 0.052
l <- 0.01
da <- 0.125/6
z <- 20
temp <- 298.85
hmax <- 0.05
pmax <- 0.5
ma <- 0
i <- 0.02
# plot
par1 = "ma"
assign(par1, read.csv(paste0(par1, "_sh.csv"), header = TRUE))
View(ma)
assign(par1, read.csv(paste0(par1, "_sh.csv"), header = TRUE))
# Define your start and end colors
color_start = "#FF0000"  # Red
color_end = "#0000FF"    # Blue
# Create a color ramp function
color_func = colorRampPalette(c(color_start, color_end))
# Generate the gradient colors
gradient_colors = color_func(length(unique(get(par1)$sh)))
unique(get(par1)$sh)
